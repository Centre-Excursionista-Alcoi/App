name: Release Internal Client version

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/build-internal-release.yml'
      - '**/*.gradle.kts'
      - 'composeApp/**'
      - 'shared/**'
      - 'gradle/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update-version-code:
    name: Update version code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Increase version code
        id: increase_version_code
        run: python ./composeApp/scripts/increaseVersionCode.py

      - name: Commit modified version code file
        id: commit_version_code
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'Updated Version Code'
          file_pattern: 'composeApp/code.txt'
          branch: master

  build-android:
    name: Build for Android
    runs-on: ubuntu-latest

    needs: update-version-code
    if: always()

    permissions:
      contents: 'write'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Import Keystore
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" > keystore.base64
          base64 --decode keystore.base64 > ./composeApp/keystore.jks

      - name: Import Secrets
        env:
          SECRETS_BASE64: ${{ secrets.SECRETS_BASE64 }}
        run: |
          echo "$SECRETS_BASE64" > secrets.base64
          base64 --decode secrets.base64 > ./secrets.properties

      - name: Import Google Services JSON
        env:
          GOOGLE_SERVICES_BASE64: ${{ secrets.GOOGLE_SERVICES_BASE64 }}
        run: |
          echo "$GOOGLE_SERVICES_BASE64" > google-services.base64
          base64 --decode google-services.base64 > ./composeApp/google-services.json

      - name: Build
        env:
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: ./gradlew --no-daemon :composeApp:bundleRelease :composeApp:assembleRelease

      - name: Artifact Bundle
        uses: actions/upload-artifact@v4
        with:
          name: bundle
          path: composeApp/build/outputs/**/*.aab
      - name: Artifact APK
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: composeApp/build/outputs/**/*.apk

  release-android-firebase:
    name: Release on Firebase
    runs-on: ubuntu-latest

    needs: build-android

    permissions:
      contents: 'read'

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Load Bundle Artifact
        uses: actions/download-artifact@v4
        with:
          name: bundle
          path: composeApp/build/outputs/bundle/release

      - name: Import Google Service Account Key JSON
        env:
          GOOGLE_SERVICE_ACCOUNT_KEY_BASE64: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY_BASE64 }}
        run: |
          echo "$GOOGLE_SERVICE_ACCOUNT_KEY_BASE64" > serviceAccountKey.base64
          base64 --decode serviceAccountKey.base64 > ./server/serviceAccountKey.json

      - name: Import Secrets
        env:
          SECRETS_BASE64: ${{ secrets.SECRETS_BASE64 }}
        run: |
          echo "$SECRETS_BASE64" > secrets.base64
          base64 --decode secrets.base64 > ./secrets.properties

      - name: Release with Firebase App Distribution
        env:
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        run: ./gradlew --no-daemon :composeApp:appDistributionUploadRelease

  release-android-github:
    name: Release on Github
    runs-on: ubuntu-latest

    needs: build-android

    permissions:
      contents: 'write'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v4
      - name: Load APK Artifact
        uses: actions/download-artifact@v4
        with:
          name: apk
          path: apk

      - name: Get current version and code
        id: get_version
        run: |
          export VERSION=$(cat composeApp/version.txt)
          export CODE=$(cat composeApp/code.txt)
          echo "version=$VERSION.$CODE" >> "$GITHUB_OUTPUT"

      - name: Release with Github
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          tag_name: ${{ steps.get_version.outputs.version }}
          files: |
            apk/**/*.apk

  release-android-googleplay:
    name: Release on Google Play
    runs-on: ubuntu-latest

    needs: build-android

    permissions:
      contents: 'write'
      id-token: 'write'

    steps:
      - name: Load Bundle Artifact
        uses: actions/download-artifact@v4
        with:
          name: bundle
          path: bundle
      - name: Sign in with Google Cloud
        uses: 'google-github-actions/auth@v2'
        id: auth
        with:
          project_id: 'centre-excursionista-d-alcoi'
          workload_identity_provider: 'projects/1000901057714/locations/global/workloadIdentityPools/github-actions/providers/github'
      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: ${{ steps.auth.outputs.credentials_file_path }}
          packageName: org.centrexcursionistalcoi.app
          releaseFiles: bundle/**/*.aab
          track: internal
          status: completed
          inAppUpdatePriority: 1


  build-ios:
    name: Build for iOS
    runs-on: ubuntu-latest

    needs: update-version-code
    if: always()

    steps:
      - uses: actions/checkout@v4

      - name: Import Secrets
        env:
          SECRETS_BASE64: ${{ secrets.SECRETS_BASE64 }}
        run: |
          echo "$SECRETS_BASE64" > secrets.base64
          base64 --decode secrets.base64 > ./secrets.properties

      - name: Import Google Services JSON
        env:
          GOOGLE_SERVICES_BASE64: ${{ secrets.GOOGLE_SERVICES_BASE64 }}
        run: |
          echo "$GOOGLE_SERVICES_BASE64" > google-services.base64
          base64 --decode google-services.base64 > ./composeApp/google-services.json

      - name: Import Google Service Account Key JSON
        env:
          GOOGLE_SERVICE_ACCOUNT_KEY_BASE64: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY_BASE64 }}
        run: |
          echo "$GOOGLE_SERVICE_ACCOUNT_KEY_BASE64" > serviceAccountKey.base64
          base64 --decode serviceAccountKey.base64 > ./server/serviceAccountKey.json

      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: appdistribution:distribute --app 1:1000901057714:ios:75c1cba02a409504d47dab --groups "cea-app"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
