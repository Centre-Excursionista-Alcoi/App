[versions]
agp = "8.7.3"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.9.3"
androidx-appcompat = "1.7.0"
androidx-lifecycle = "2.8.4"
androidx-sqlite-bundled = "2.5.0-alpha12"
buildkonfig = "0.15.2"
carbon = "0.3.1"
coil = "3.1.0"
compose-calf = "0.7.0"
compose-cupertino = "0.1.0-alpha04"
compose-filekit = "0.8.8"
compose-googlefonts = "1.7.6"
compose-multiplatform = "1.7.3"
compose-navigation = "2.8.0-alpha12"
datastore = "1.1.1"
exposed = "0.59.0"
firebase-admin = "9.4.3"
firebase-appdistribution = "5.0.0"
google-services = "4.4.2"
h2 = "2.3.232"
javax-money = "1.1"
javamoney = "1.4.4"
kmpnotifier = "1.4.0"
kotlin = "2.1.10"
kotlinx-coroutines = "1.10.1"
kotlinx-datetime = "0.6.2"
kotlinx-serialization =  "1.8.0"
kreds = "0.9.1"
ksp = "2.1.10-1.0.29"
ktor = "3.0.3"
logback = "1.5.16"
multiplatform-settings = "1.3.0"
napier = "2.7.1"
postgresql = "42.7.5"
qrose = "1.0.1"
room = "2.7.0-alpha12"
sentry-java = "8.1.0"
sentry-jvm = "5.1.0"
sentry-multiplatform = "0.10.0"

[libraries]
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
compose-coil-base = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
compose-calf-ui = { module = "com.mohamedrejeb.calf:calf-ui", version.ref = "compose-calf" }
compose-carbon = { module = "io.github.gabrieldrn:carbon", version.ref = "carbon" }
compose-cupertino-icons = { module = "io.github.alexzhirkevich:cupertino-icons-extended", version.ref = "compose-cupertino" }
compose-cupertino-native = { module = "io.github.alexzhirkevich:cupertino-native", version.ref = "compose-cupertino" }
compose-filekit = { module = "io.github.vinceglb:filekit-compose", version.ref = "compose-filekit" }
compose-googlefonts = { module = "androidx.compose.ui:ui-text-google-fonts", version.ref = "compose-googlefonts" }
compose-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "compose-navigation" }
compose-windowSizeClass = { module = "org.jetbrains.compose.material3:material3-window-size-class", version.ref = "compose-multiplatform" }
datastore-base = { module = "androidx.datastore:datastore", version.ref = "datastore" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-javaTime = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }
exposed-money = { module = "org.jetbrains.exposed:exposed-money", version.ref = "exposed" }
firebase-admin = { module = "com.google.firebase:firebase-admin", version.ref = "firebase-admin" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
javax-money-api = { module = "javax.money:money-api", version.ref = "javax-money" }
javax-money-impl = { module = "org.javamoney:moneta", version.ref = "javamoney" }
kmpnotifier = { module = "io.github.mirzemehdi:kmpnotifier", version.ref = "kmpnotifier" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kreds = { module = "io.github.crackthecodeabhi:kreds", version.ref = "kreds" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-serialization-kotlinxJson = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-contentNegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-sessions = { module = "io.ktor:ktor-server-sessions", version.ref = "ktor" }
ktor-server-statusPages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
multiplatformSettings-base = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
multiplatformSettings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatform-settings" }
multiplatformSettings-datastore = { module = "com.russhwolf:multiplatform-settings-datastore", version.ref = "multiplatform-settings" }
multiplatformSettings-makeObservable = { module = "com.russhwolf:multiplatform-settings-make-observable", version.ref = "multiplatform-settings" }
multiplatformSettings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatform-settings" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
postgresql = { module = "org.postgresql:postgresql", version.ref = "postgresql" }
qrose = { module = "io.github.alexzhirkevich:qrose", version.ref = "qrose" }
room-bundledSqlite = { module = "androidx.sqlite:sqlite-bundled", version.ref = "androidx-sqlite-bundled" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
sentry-javaIo = { module = "io.sentry:sentry", version.ref = "sentry-java" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
buildkonfig = { id = "com.codingfeline.buildkonfig", version.ref = "buildkonfig" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
firebaseAppDistribution = { id = "com.google.firebase.appdistribution", version.ref = "firebase-appdistribution" }
gms = { id = "com.google.gms.google-services", version.ref = "google-services" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
room = { id = "androidx.room", version.ref = "room" }
sentry-jvm = { id = "io.sentry.jvm.gradle", version.ref = "sentry-jvm" }
sentry-multiplatform = { id = "io.sentry.kotlin.multiplatform.gradle", version.ref = "sentry-multiplatform" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
